<!doctype html>
<html>
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title><%= mode === 'add' ? 'Add Requirements' : 'Edit Requirement' %> - Olive Chairs CRM</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .req-row { 
      background: #f8f9fa; 
      border-radius: 8px; 
      padding: 15px; 
    }
  </style>
</head>
<body>
<%- include('../partials/navbar', { user, activePage }) %>

<div class="container py-4">
  <h3 class="mb-3">
    <%= mode === 'add' ? 'Add Requirements' : 'Edit Requirement' %> for <%= lead.customer_name %>
  </h3>

  <form action="<%= mode === 'add' 
      ? `/leads/${lead._id}/requirement/add` 
      : `/leads/${lead._id}/requirement/${requirement._id}/edit` %>" 
    method="post" class="card shadow-sm p-4">

    <div id="requirementsContainer" class="vstack gap-3">
      
      <% if (mode === 'edit') { %>
        <!-- Single row for edit -->
        <div class="req-row">
          <div class="mb-3">
            <label class="form-label">Chair Model</label>
            <select name="chairId" class="form-select chairSelect" required>
              <% chairs.forEach(c => { %>
                <option value="<%= c._id %>" <%= requirement.chair._id.toString() === c._id.toString() ? 'selected' : '' %>>
                  <%= c.modelName %>
                </option>
              <% }) %>
            </select>
          </div>

          <div class="mb-3">
            <label class="form-label">Color</label>
            <select name="colorId" class="form-select colorSelect" required>
              <% requirement.chair.colors.forEach(col => { %>
                <option value="<%= col._id %>" <%= requirement.colorId.toString() === col._id.toString() ? 'selected' : '' %>>
                  <%= col.name %> (₹<%= col.basePrice %>)
                </option>
              <% }) %>
            </select>
          </div>

          <div class="mb-3 row">
            <div class="col-md-3">
              <label class="form-label">Quantity</label>
              <input type="number" name="quantity" class="form-control qty" min="1" value="<%= requirement.quantity %>" required>
            </div>
            <div class="col-md-3">
              <label class="form-label">Unit Price (₹)</label>
              <input type="number" name="unitPrice" class="form-control unit" min="0" step="1" value="<%= requirement.unitPrice %>" required>
            </div>
            <div class="col-md-3">
              <label class="form-label">Shipping/Unit (₹)</label>
              <input type="number" name="shippingUnit" class="form-control ship" min="0" step="1" value="<%= requirement.shippingUnit || 0 %>" required>
            </div>
            <div class="col-md-3">
              <label class="form-label">Total Price (₹)</label>
              <input type="text" class="form-control total" value="<%= requirement.totalPrice %>" readonly>
            </div>
          </div>

          <div class="mb-3">
            <label class="form-label">Note</label>
            <textarea name="note" class="form-control" rows="2"><%= requirement.note %></textarea>
          </div>
        </div>
      <% } else { %>
        <!-- First empty row in add mode -->
        <div class="req-row">
          <div class="mb-3">
            <label class="form-label">Chair Model</label>
            <select name="requirements[0][chairId]" class="form-select chairSelect" required>
              <option value="">-- Select Model --</option>
              <% chairs.forEach(c => { %>
                <option value="<%= c._id %>"><%= c.modelName %></option>
              <% }) %>
            </select>
          </div>

          <div class="mb-3">
            <label class="form-label">Color</label>
            <select name="requirements[0][colorId]" class="form-select colorSelect" required>
              <option value="">-- Select Color --</option>
            </select>
          </div>

          <div class="mb-3 row">
            <div class="col-md-3">
              <label class="form-label">Quantity</label>
              <input type="number" name="requirements[0][quantity]" class="form-control qty" min="1" value="1" required>
            </div>
            <div class="col-md-3">
              <label class="form-label">Unit Price (₹)</label>
              <input type="number" name="requirements[0][unitPrice]" class="form-control unit" min="0" step="1" required>
            </div>
            <div class="col-md-3">
              <label class="form-label">Shipping/Unit (₹)</label>
              <input type="number" name="requirements[0][shippingUnit]" class="form-control ship" min="0" step="1" value="0" required>
            </div>
            <div class="col-md-3">
              <label class="form-label">Total Price (₹)</label>
              <input type="text" class="form-control total" readonly>
            </div>
          </div>

          <div class="mb-3">
            <label class="form-label">Note</label>
            <textarea name="requirements[0][note]" class="form-control" rows="2"></textarea>
          </div>
        </div>
      <% } %>
    </div>

    <!-- Add more requirements button -->
    <% if (mode === 'add') { %>
      <button type="button" id="addRequirement" class="btn btn-outline-primary my-3">+ Add More Requirement</button>
    <% } %>

    <div class="d-flex justify-content-end mt-3">
      <a href="/leads/<%= lead._id %>" class="btn btn-secondary me-2">Cancel</a>
      <button class="btn btn-<%= mode === 'add' ? 'success' : 'primary' %>">
        <%= mode === 'add' ? 'Add Requirements' : 'Save Changes' %>
      </button>
    </div>
  </form>
</div>

<script>
  const chairs = <%- JSON.stringify(chairs) %>;
  const container = document.getElementById('requirementsContainer');
  const addBtn = document.getElementById('addRequirement');

  // counter for rows
  let index = 1;

  // Add new requirement row dynamically
  addBtn?.addEventListener('click', () => {
    const row = document.createElement('div');
    row.className = 'req-row';
    row.innerHTML = `
      <div class="mb-3">
        <label class="form-label">Chair Model</label>
        <select name="requirements[${index}][chairId]" class="form-select chairSelect" required>
          <option value="">-- Select Model --</option>
          ${chairs.map(c => `<option value="${c._id}">${c.modelName}</option>`).join('')}
        </select>
      </div>
      <div class="mb-3">
        <label class="form-label">Color</label>
        <select name="requirements[${index}][colorId]" class="form-select colorSelect" required>
          <option value="">-- Select Color --</option>
        </select>
      </div>
      <div class="mb-3 row">
        <div class="col-md-3">
          <label class="form-label">Quantity</label>
          <input type="number" name="requirements[${index}][quantity]" class="form-control qty" min="1" value="1" required>
        </div>
        <div class="col-md-3">
          <label class="form-label">Unit Price (₹)</label>
          <input type="number" name="requirements[${index}][unitPrice]" class="form-control unit" min="0" step="1" required>
        </div>
        <div class="col-md-3">
          <label class="form-label">Shipping/Unit (₹)</label>
          <input type="number" name="requirements[${index}][shippingUnit]" class="form-control ship" min="0" step="1" value="0" required>
        </div>
        <div class="col-md-3">
          <label class="form-label">Total Price (₹)</label>
          <input type="text" class="form-control total" readonly>
        </div>
      </div>
      <div class="mb-3">
        <label class="form-label">Note</label>
        <textarea name="requirements[${index}][note]" class="form-control" rows="2"></textarea>
      </div>
      <div class="text-end">
        <button type="button" class="btn btn-sm btn-outline-danger removeReq">✕ Remove</button>
      </div>
    `;
    container.appendChild(row);
    index++;
  });

  // Remove requirement row
  container.addEventListener('click', e => {
    if (e.target.classList.contains('removeReq')) {
      e.target.closest('.req-row')?.remove();
    }
  });

  // Populate colors when chair changes
  container.addEventListener('change', e => {
    if (e.target.classList.contains('chairSelect')) {
      const chairId = e.target.value;
      const colorSelect = e.target.closest('.req-row').querySelector('.colorSelect');
      colorSelect.innerHTML = '<option value="">-- Select Color --</option>';
      const chair = chairs.find(c => c._id === chairId);
      if (chair) {
        chair.colors.forEach(col => {
          const opt = document.createElement('option');
          opt.value = col._id;
          opt.textContent = `${col.name} (₹${col.basePrice})`;
          colorSelect.appendChild(opt);
        });
      }
    }
  });

  // Auto calculate total (qty * (unit + ship))
  container.addEventListener('input', e => {
    if (e.target.classList.contains('qty') || e.target.classList.contains('unit') || e.target.classList.contains('ship')) {
      const row = e.target.closest('.req-row');
      const q = parseInt(row.querySelector('.qty').value) || 0;
      const u = parseFloat(row.querySelector('.unit').value) || 0;
      const s = parseFloat(row.querySelector('.ship').value) || 0;
      row.querySelector('.total').value = (u + s) * q;
    }
  });
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
