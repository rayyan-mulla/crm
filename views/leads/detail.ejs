<% function displaySource(source) { 
    const map = {
      google_sheet: 'Google Sheets',
      meta: 'Meta',
      indiamart: 'IndiaMART',
      manual: 'Manual Entry',
      excel_upload: 'Excel Upload'
    };
    return map[source] || source;
} %>

<!doctype html>
<html>
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Lead Detail - Olive Chairs</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
  <style>
    /* Left column boxes */
    :root {
      /* Adjust this if your header/breadcrumbs get taller/shorter */
      --lead-panels-offset: 150px;
    }

    .lead-panels-row {
      /* The entire row is now a fixed-height area */
      height: calc(100vh - var(--lead-panels-offset));
      min-height: 420px; /* safety floor for short viewports */
    }

    /* Make both columns fill that height */
    .lead-left, .lead-right { height: 100%; min-height: 0; }

    /* Left column: stack Notes and Status evenly and allow them to scroll */
    .lead-left {
      display: grid;
      grid-template-rows: 1fr 1fr;  /* 50/50 split */
      gap: .5rem;
    }

    /* Ensure cards and bodies can shrink so inner areas can scroll */
    .lead-panels-row .card { height: 100%; min-height: 0; }
    .lead-panels-row .card-body { display: flex; flex-direction: column; min-height: 0; }

    /* Scrollable inner boxes */
    .scroll-box,
    .status-box,
    .chat-box { overflow-y: auto; }

    /* Chat area should flex and scroll without pushing the column taller */
    .chat-box {
      background: #f8f9fa;
      border-radius: 8px;
      padding: 10px;
      min-height: 0; /* important for flex children */
      flex: 1 1 auto;
      overflow-y: auto;
      margin-bottom: 0.5rem;
      display: flex;
      flex-direction: column;
    }

    .chat-msg {
      margin-bottom: 10px;
      padding: 8px 12px;
      border-radius: 15px;
      max-width: 75%;
      word-wrap: break-word;
    }
    .chat-msg.sent { background: #d1e7dd; margin-left: auto; }
    .chat-msg.received { background: #e2e3e5; margin-right: auto; }

    /* Tweak small badge */
    /* Keep the whole active row on one line and truncate long value */
    .active-for-sending {
      display: flex;
      gap: .5rem;
      align-items: center;
      flex-wrap: nowrap;        /* critical: prevent wrapping */
      white-space: nowrap;      /* treat text as one line */
      overflow: hidden;         /* hide overflow */
    }

    /* Badge that truncates its inner text */
    .badge-active-number {
      display: inline-block;
      max-width: 60%;           /* adjust as needed (60% of container) */
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;  /* show "..." for long values */
      vertical-align: middle;
    }

    /* Ensure card bodies stretch */
    .row.align-items-stretch { align-items: stretch; }
    .card.h-100 { height: 100%; }
    .card-body.d-flex.flex-column { display:flex; flex-direction:column; }
  </style>
</head>
<body>
<%- include('../partials/navbar', { user, activePage }) %>
<div class="container py-4">

  <!-- Lead Info -->
  <div class="card shadow-sm mb-4">
    <div class="card-body">
      <!-- Header -->
      <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="mb-0 fw-bold text-dark">
          <i class="bi bi-person-circle me-2 text-secondary"></i>
          <%= lead.customer_name %>
        </h4>
        <span class="badge bg-light text-dark border"><%= lead.status %></span>
      </div>

      <div class="row g-4">
        <!-- Contact Info + Date -->
        <div class="col-md-6">
          <div class="mb-3">
            <small class="text-muted d-block">Date</small>
            <span><%= lead.date ? new Date(lead.date).toLocaleDateString() : '-' %></span>
          </div>
          
          <div class="mb-3">
            <small class="text-muted d-block">Phone</small>
            <div class="d-flex align-items-center">
              <span class="me-3"><%= lead.contact_number %></span>
              <% if (lead.contact_number) { %>
                <a href="tel:<%= lead.contact_number %>" class="btn btn-sm btn-outline-primary">
                  <i class="bi bi-telephone"></i> Call
                </a>
              <% } %>
            </div>
          </div>

          <!-- NEW: Alternate Number (right after the Phone block) -->
          <div class="mb-3">
            <small class="text-muted d-block">Alternate Phone</small>
            <% if (lead.canEdit) { %>
              <form action="/leads/<%= lead._id %>/alternate-number" method="post" class="d-flex">
                <input
                  type="text"
                  name="alternate_number"
                  class="form-control me-2"
                  value="<%= lead.alternate_number || '' %>"
                  placeholder="Enter alternate number"
                >
                <button class="btn btn-outline-primary btn-sm">Save</button>
              </form>
            <% } else { %>
              <span><%= lead.alternate_number || '—' %></span>
            <% } %>
          </div>

          <div class="mb-3">
            <small class="text-muted d-block">Email</small>
            <div class="d-flex align-items-center">
              <span class="me-3"><%= lead.email_id || '-' %></span>
              <% if (lead.email_id) { %>
                <a href="mailto:<%= lead.email_id %>" class="btn btn-sm btn-outline-secondary">
                  <i class="bi bi-envelope"></i> Draft
                </a>
              <% } %>
            </div>
          </div>

          <div class="mb-3">
            <small class="text-muted d-block">City</small>
            <span><%= lead.city || '—' %></span>
          </div>
        </div>

        <!-- Meta Info (source, requirement, assigned, etc.) -->
        <div class="col-md-6">
          <div class="mb-3">
            <small class="text-muted d-block">Source</small>
            <span class="fw-semibold text-dark">
              <%= displaySource(lead.source) %>
              <% if (lead.sourceMeta && (lead.sourceMeta.byUser || lead.sourceMeta.importedAt || lead.sourceMeta.uploadedAt || lead.sourceMeta.createdAt)) { %>
                <small class="text-muted">
                  (
                  <% if (lead.sourceMeta.byUser) { %>
                    by <%= lead.sourceMeta.byUser %>
                  <% } %>
                  <% const sourceDate = lead.sourceMeta.importedAt || lead.sourceMeta.uploadedAt || lead.sourceMeta.createdAt; %>
                  <% if (sourceDate) { %>
                    on <%= new Date(sourceDate).toLocaleString() %>
                  <% } %>
                  )
                </small>
              <% } %>
            </span>
          </div>

          <div class="mb-3">
            <small class="text-muted d-block">Lead Source</small>
            <span class="d-inline-block text-truncate" style="max-width: 100%;" title="<%= lead.leadSource || '' %>">
              <%= lead.leadSource || '—' %>
            </span>
          </div>

          <div class="mb-3">
            <small class="text-muted d-block">Requirement</small>
            <span class="d-inline-block text-truncate" style="max-width: 100%;" title="<%= lead.requirement || '' %>">
              <%= lead.requirement || '—' %>
            </span>
          </div>

          <div class="mb-3">
            <small class="text-muted d-block">Assigned To</small>
            <span><%= lead.assignedTo ? lead.assignedTo.fullName : '—' %></span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Structured Requirement (new section) -->
  <div class="card shadow-sm mb-4">
    <div class="card-body">
      <h5 class="mb-3">Structured Requirement</h5>

      <% if (lead.normalizedRequirements && lead.normalizedRequirements.length) { %>
        <ul class="list-group mb-3">
          <% lead.normalizedRequirements.forEach(req => { %>
            <li class="list-group-item d-flex justify-content-between align-items-center">
              <div>
                <% 
                  const colorObj = req.chair && req.chair.colors.find(c => c._id.toString() === (req.colorId||'').toString());
                  const basePrice = colorObj ? colorObj.basePrice : null;
                  const unitPrice = req.unitPrice;
                  const shipping = req.shippingUnit || 0;
                  const priceDiff = basePrice !== null 
                    ? Math.round( (unitPrice / 1.18) - (basePrice / 1.18) - shipping ) 
                    : null;
                %>
                <strong><%= req.chair.modelName %></strong> – 
                <%= colorObj ? colorObj.name : 'Unknown Color' %>
                (x<%= req.quantity %>)
                <br>
                <small>Base Price: ₹<%= basePrice !== null ? basePrice : '-' %></small><br>
                <small>Shipping/Unit: ₹<%= shipping %></small><br>
                <small>
                  Unit: ₹<%= unitPrice %>
                  <% if (priceDiff !== null && priceDiff !== 0) { %>
                    <span class="<%= priceDiff > 0 ? 'text-danger' : 'text-success' %>">
                      (<%= priceDiff > 0 ? '+' : '' %><%= priceDiff %>)
                    </span>
                  <% } %>
                  | Total: ₹<%= req.totalPrice %>
                </small>
                <% if (req.note) { %>
                  <br><small class="text-muted">Note: <%= req.note %></small>
                <% } %>
              </div>
              <% if (lead.canEdit) { %>
                <a href="/leads/<%= lead._id %>/requirement/<%= req._id %>/edit" class="btn btn-sm btn-outline-primary">Edit</a>
              <% } %>
            </li>
          <% }) %>
        </ul>
      <% } else { %>
        <p class="text-muted">No structured requirement set yet.</p>
      <% } %>
      <%
        let totalDiff = 0;
        (lead.normalizedRequirements || []).forEach(r => {
          const color = r.chair && r.chair.colors.find(c => c._id.toString() === (r.colorId||'').toString());
          if (color) {
            const unitBase = (r.unitPrice || 0) / 1.18;
            const base = (color.basePrice || 0) / 1.18;
            const shipping = r.shippingUnit || 0;
            totalDiff += Math.round((unitBase - base - shipping) * r.quantity);
          }
        });
      %>
      <div class="alert 
        <%= totalDiff > 0 
            ? 'alert-danger' 
            : (totalDiff < 0 ? 'alert-success' : 'alert-secondary') %> 
        d-flex justify-content-between align-items-center mt-2">
        <span>
          Overall <%= totalDiff > 0 ? 'Markup' : (totalDiff < 0 ? 'Discount' : 'No markup/discount') %>
        </span>
        <strong>
          ₹<%= totalDiff %>
        </strong>
      </div>
      <% if (lead.canEdit) { %>
        <a href="/leads/<%= lead._id %>/requirement/add" class="btn btn-sm btn-success">+ Add Requirement</a>
      <% } else { %>
        <p class="text-muted mb-0">You cannot add or edit requirements for this lead.</p>
      <% } %>
    </div>
  </div>

  <!-- Assign & Status -->
  <div class="row mb-4">
    <div class="col-md-6">
      <div class="card shadow-sm">
        <div class="card-body">
          <h6 class="fw-bold mb-3">Assign Lead</h6>
          <% if (lead.canEdit) { %>
            <form action="/leads/<%= lead._id %>/assign" method="post" class="d-flex">
              <select name="userId" class="form-select me-2">
                <option value="">-- Assign User --</option>
                <% assignableUsers.forEach(u => { %>
                  <option value="<%= u._id %>" <%= lead.assignedTo && lead.assignedTo._id.toString() === u._id.toString() ? 'selected' : '' %>>
                    <%= u.fullName %> (<%= u.role %>)
                  </option>
                <% }) %>
              </select>
              <button class="btn btn-outline-primary">Assign</button>
            </form>
          <% } else { %>
            <p class="text-muted">Only admins or the assigned user can change assignment.</p>
          <% } %>
        </div>
      </div>
    </div>

    <div class="col-md-6">
      <div class="card shadow-sm">
        <div class="card-body">
          <h6 class="fw-bold mb-3">Update Status</h6>
          <% if (lead.canEdit) { %>
            <form action="/leads/<%= lead._id %>/status" method="post" class="d-flex align-items-center">
              <select name="status" id="statusSelect" class="form-select me-2" onchange="toggleCustomStatus()">
                <option value="">-- Update Status --</option>
                <% 
                  const adminStatuses = ["New","Assigned","In Progress","Deal Drop","Closed"];
                  const userStatuses = ["In Progress","Deal Drop","Closed"];
                  const statuses = user.role === 'admin' ? adminStatuses : userStatuses;
                %>

                <% statuses.forEach(s => { %>
                  <option value="<%= s %>" <%= lead.status===s ? 'selected' : '' %>><%= s %></option>
                <% }) %>
                <option value="__other__">Other...</option>
              </select>
              <input type="text" name="customStatus" id="customStatusInput" class="form-control me-2 d-none" placeholder="Enter custom status">
              <button class="btn btn-outline-success">Update</button>
            </form>
          <% } else { %>
            <p class="text-muted">Status updates are only available for the assigned user or admin.</p>
          <% } %>
        </div>
      </div>
    </div>
  </div>

  <!-- Notes + Status History (Left) | WhatsApp (Right) -->
  <div class="row gx-3 lead-panels-row">
    <div class="col-md-6 lead-left d-flex flex-column">
      <!-- Notes -->
      <div class="card shadow-sm mb-2 h-100 d-flex flex-column">
        <div class="card-body d-flex flex-column">
          <h5>Notes</h5>
          <% if (lead.canEdit) { %>
            <form action="/leads/<%= lead._id %>/note" method="post" class="d-flex mb-3">
              <input type="text" name="note" class="form-control me-2" placeholder="Add a note..." required>
              <button class="btn btn-primary">Add</button>
            </form>
          <% } else { %>
            <p class="text-muted">You can view notes, but only the assigned user or admin can add new ones.</p>
          <% } %>
          <div class="scroll-box flex-grow-1 overflow-auto mt-2">
            <% if (lead.notes.length) { %>
              <% lead.notes.slice().reverse().forEach(n => { %>
                <div class="border rounded p-2 mb-2 bg-light">
                  <%= n.text %>
                  <small class="text-muted d-block">
                    — <%= n.user ? n.user.fullName : 'Unknown' %>, 
                    <%= new Date(n.createdAt).toLocaleString() %>
                  </small>
                </div>
              <% }) %>
            <% } else { %>
              <p class="text-muted">No notes yet</p>
            <% } %>
          </div>
        </div>
      </div>

      <!-- Status History -->
      <div class="card shadow-sm h-100 d-flex flex-column">
        <div class="card-body d-flex flex-column">
          <h5>Status History</h5>
          <div class="status-box flex-grow-1 overflow-auto mt-2">
            <% if (lead.statusHistory.length) { %>
              <% lead.statusHistory.slice().reverse().forEach(h => { %>
                <div class="border rounded p-2 mb-2 bg-light">
                  <%= h.status %>
                  <small class="text-muted d-block">
                    — <%= h.changedBy ? h.changedBy.fullName : 'Unknown' %>, 
                    <%= new Date(h.createdAt).toLocaleString() %>
                  </small>
                </div>
              <% }) %>
            <% } else { %>
              <p class="text-muted">No status updates yet</p>
            <% } %>
          </div>
        </div>
      </div>
    </div>

      <!-- WhatsApp -->
    <div class="col-md-6 lead-right d-flex flex-column">
      <div class="card shadow-sm h-100 d-flex flex-column">
        <div class="card-body d-flex flex-column">
          <!-- Header with WhatsApp title -->
          <h5 class="mb-3">WhatsApp</h5>

          <!-- Numbers row -->
          <div class="d-flex mb-3 gap-2">
            <!-- From: Persisted (Set as Default button) -->
            <div class="flex-grow-1">
              <label class="small text-muted">From (default for sending)</label>
              <form action="/leads/<%= lead._id %>/whatsapp-number" method="post" class="d-flex align-items-start">
                <select name="whatsappNumberId" id="persistedFromSelect" class="form-select form-select-sm me-2">
                  <option value="">-- Select Number --</option>
                  <% whatsappNumbers.forEach(num => { %>
                    <option value="<%= num.phone_number_id %>" <%= lead.whatsappNumberId === num.phone_number_id ? 'selected' : '' %>>
                      <%= num.display_number %> (<%= num.label %>)
                    </option>
                  <% }) %>
                </select>
                <!-- Renamed button for clarity -->
                <button class="btn btn-outline-success btn-sm" title="Mark this WhatsApp number as the active sender">Save</button>
              </form>

              <!-- improved active-from badge -->
              <div class="mt-2 small active-for-sending">
                <span class="text-muted">Active for sending:</span>

                <% if (lead.whatsappNumberId) { 
                    const active = whatsappNumbers.find(n => n.phone_number_id === lead.whatsappNumberId);
                    const activeText = active ? (active.display_number + (active.label ? (' — ' + active.label) : '')) : lead.whatsappNumberId;
                %>
                  <span
                    class="badge rounded-pill bg-primary text-white ms-1 badge-active-number"
                    title="<%= activeText %>">
                    <i class="bi bi-check-circle-fill me-1" aria-hidden="true"></i>
                    <%= activeText %>
                  </span>
                <% } else { %>
                  <span class="text-muted ms-1">Not set</span>
                <% } %>
              </div>
            </div>

            <!-- To: Filter only (dynamic) -->
            <div class="flex-grow-1">
              <label class="small text-muted">To</label>
              <form id="chatFilterForm" method="get">
                <select id="toNumberSelect" name="to" class="form-select form-select-sm" onchange="document.getElementById('chatFilterForm').submit()">
                  <% if (lead.contact_number) { %>
                    <option value="<%= lead.contact_number %>" <%= selectedTo === lead.contact_number ? 'selected' : '' %>>
                      <%= lead.contact_number %> (Primary)
                    </option>
                  <% } %>
                  <% if (lead.alternate_number) { %>
                    <option value="<%= lead.alternate_number %>" <%= selectedTo === lead.alternate_number ? 'selected' : '' %>>
                      <%= lead.alternate_number %> (Alternate)
                    </option>
                  <% } %>
                </select>
              </form>
            </div>
          </div>
          <% if (!lead.whatsappNumberId) { %>
            <p class="text-muted">⚠️ Please assign a WhatsApp number to this lead before chatting.</p>
          <% } else { %>
            <div class="chat-box">
              <% if (chats.length) { %>
                <% chats.forEach(c => { %>
                  <div class="chat-msg <%= c.direction === 'outbound' ? 'sent' : 'received' %>">
                    <% if (c.type === 'text') { %>
                      <%= c.content %>
                    <% } else if (c.type === 'template') { %>
                      📑 Sent template: <strong><%= c.content %></strong>
                    <% } else if (c.type === 'image' && c.mediaId) { %>
                      <a href="/whatsapp/media/<%= c.mediaId %>" target="_blank">
                        <img src="/whatsapp/media/<%= c.mediaId %>" 
                            alt="Image" 
                            style="max-width:200px; border-radius:8px; display:block; margin-bottom:5px;">
                      </a>
                      <% if (c.caption) { %><div><%= c.caption %></div><% } %>
                    <% } else if (c.type === 'document' && c.mediaId) { %>
                      <a href="/whatsapp/media/<%= c.mediaId %>" target="_blank">
                        📄 Download Document
                      </a>
                      <% if (c.caption) { %><div><%= c.caption %></div><% } %>
                    <% } else if (c.type === 'audio' && c.mediaId) { %>
                      <audio controls style="width:100%;">
                        <source src="/whatsapp/media/<%= c.mediaId %>" type="audio/mpeg">
                        Your browser does not support the audio element.
                      </audio>
                    <% } else { %>
                      [<%= c.type %>]
                    <% } %>
                    <div class="small text-muted mt-1">
                      <%= new Date(c.timestamp).toLocaleString() %>
                    </div>
                  </div>
                <% }) %>
              <% } else { %>
                <p class="text-muted">No messages yet</p>
              <% } %>
            </div>

            <% if (lead.canEdit) { %>
              <% if (canFreeChat) { %>
                <form action="/leads/<%= lead._id %>/whatsapp/send-text" method="post" class="d-flex mt-2" onsubmit="syncToNumber(this)">
                  <input type="hidden" name="to" id="hiddenToNumber">
                  <input type="text" name="body" class="form-control me-2" placeholder="Type a message..." required>
                  <button class="btn btn-success"><i class="bi bi-send"></i></button>
                </form>
              <% } else { %>
                <form action="/leads/<%= lead._id %>/whatsapp/send-text" method="post" class="d-flex mt-2" onsubmit="syncToNumber(this)">
                  <input type="hidden" name="to" id="hiddenToNumber">
                  <select name="templateName" class="form-select me-2" required>
                    <option value="">-- Select Template --</option>
                    <% whatsappTemplates.forEach(t => { %>
                      <option value="<%= t.name %>||<%= t.language %>"><%= t.name %> (<%= t.language %>)</option>
                    <% }) %>
                  </select>
                  <button class="btn btn-primary">
                    <i class="bi bi-chat-left-text"></i>
                  </button>
                </form>
                <p class="text-muted small mt-1">
                  💡 A template message must be sent first. Once the user replies, you can chat freely for 24h.
                </p>
              <% } %>
            <% } else { %>
              <p class="text-muted">You can view WhatsApp messages, but only the assigned user or admin can reply.</p>
            <% } %>
          <% } %>
        </div>
      </div>
    </div>
  </div>

</div>

<script>
  function toggleCustomStatus() {
    const select = document.getElementById('statusSelect');
    const input = document.getElementById('customStatusInput');
    if (select && input) {
      if (select.value === '__other__') {
        input.classList.remove('d-none');
        input.required = true;
      } else {
        input.classList.add('d-none');
        input.required = false;
      }
    }
  }

  function scrollChatToBottom() {
    const chatBox = document.querySelector('.chat-box');
    if (chatBox) chatBox.scrollTop = chatBox.scrollHeight;
  }
  // Auto-scroll on load
  window.addEventListener('DOMContentLoaded', scrollChatToBottom);
</script>

<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();
  // join this lead’s room (only if lead._id exists)
  if ("<%= lead._id %>") socket.emit('joinLeadRoom', "<%= lead._id %>");

  // when server pushes a new message
  socket.on('newMessage', (msg) => {
    console.log("📩 New message arrived", msg);
    const chatBox = document.querySelector('.chat-box');
    if (!chatBox) return;

    // create message bubble
    const div = document.createElement('div');
    div.className = 'chat-msg ' + (msg.direction === 'outbound' ? 'sent' : 'received');
    div.innerHTML = `
      ${msg.type === 'text' ? msg.content : `[${msg.type}]`}
      <div class="small text-muted">${new Date(msg.timestamp).toLocaleString()}</div>
    `;

    chatBox.appendChild(div);
    chatBox.scrollTop = chatBox.scrollHeight;
  });
</script>

<script>
  function syncToNumber(form) {
    const selectedToEl = document.getElementById('toNumberSelect');
    if (!selectedToEl || !form) return;
    const selectedTo = selectedToEl.value;
    const hidden = form.querySelector('#hiddenToNumber');
    if (hidden) hidden.value = selectedTo;
  }
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
